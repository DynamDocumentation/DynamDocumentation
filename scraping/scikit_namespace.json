{
    "base": {
        "params": "não encontrado",
        "notes": "não encontrado",
        "description": "Base classes for all estimators and various utility functions.",
        "atributes": "não encontrado",
        "metodos": [
            "BaseEstimator",
            "BiclusterMixin",
            "ClassNamePrefixFeaturesOutMixin",
            "ClassifierMixin",
            "ClusterMixin",
            "DensityMixin",
            "MetaEstimatorMixin",
            "OneToOneFeatureMixin",
            "OutlierMixin",
            "RegressorMixin",
            "TransformerMixin",
            "clone",
            "is_classifier",
            "is_clusterer",
            "is_regressor",
            "is_outlier_detector"
        ]
    },
    "calibration": {
        "params": "não encontrado",
        "notes": "não encontrado",
        "description": "Methods for calibrating predicted probabilities.",
        "atributes": "não encontrado",
        "metodos": [
            "CalibratedClassifierCV",
            "calibration_curve",
            "CalibrationDisplay"
        ]
    },
    "cluster": {
        "params": "não encontrado",
        "notes": "não encontrado",
        "description": "Popular unsupervised clustering algorithms.",
        "atributes": "não encontrado",
        "metodos": [
            "AffinityPropagation",
            "AgglomerativeClustering",
            "Birch",
            "BisectingKMeans",
            "DBSCAN",
            "FeatureAgglomeration",
            "HDBSCAN",
            "KMeans",
            "MeanShift",
            "MiniBatchKMeans",
            "OPTICS",
            "SpectralBiclustering",
            "SpectralClustering",
            "SpectralCoclustering",
            "affinity_propagation",
            "cluster_optics_dbscan",
            "cluster_optics_xi",
            "compute_optics_graph",
            "dbscan",
            "estimate_bandwidth",
            "k_means",
            "kmeans_plusplus",
            "mean_shift",
            "spectral_clustering",
            "ward_tree"
        ]
    },
    "compose": {
        "params": "não encontrado",
        "notes": "não encontrado",
        "description": "Meta-estimators for building composite models with transformers.",
        "atributes": "não encontrado",
        "metodos": [
            "ColumnTransformer",
            "TransformedTargetRegressor",
            "make_column_selector",
            "ColumnTransformer",
            "make_column_transformer"
        ]
    },
    "covariance": {
        "params": "não encontrado",
        "notes": "não encontrado",
        "description": "Methods and algorithms to robustly estimate covariance.",
        "atributes": "não encontrado",
        "metodos": [
            "EllipticEnvelope",
            "EmpiricalCovariance",
            "GraphicalLasso",
            "GraphicalLassoCV",
            "LedoitWolf",
            "MinCovDet",
            "OAS",
            "ShrunkCovariance",
            "empirical_covariance",
            "graphical_lasso",
            "ledoit_wolf",
            "ledoit_wolf_shrinkage",
            "oas",
            "shrunk_covariance"
        ]
    },
    "cross_decomposition": {
        "params": "não encontrado",
        "notes": "não encontrado",
        "description": "Algorithms for cross decomposition.",
        "atributes": "não encontrado",
        "metodos": [
            "CCA",
            "PLSCanonical",
            "PLSRegression",
            "PLSSVD"
        ]
    },
    "datasets": {
        "params": "não encontrado",
        "notes": "não encontrado",
        "description": "Utilities to load popular datasets and artificial data generators.",
        "atributes": "não encontrado",
        "metodos": [
            "clear_data_home",
            "dump_svmlight_file",
            "fetch_20newsgroups",
            "fetch_20newsgroups_vectorized",
            "fetch_california_housing",
            "fetch_covtype",
            "fetch_file",
            "fetch_kddcup99",
            "fetch_lfw_pairs",
            "fetch_lfw_people",
            "fetch_olivetti_faces",
            "fetch_openml",
            "fetch_rcv1",
            "fetch_species_distributions",
            "get_data_home",
            "load_breast_cancer",
            "load_diabetes",
            "load_digits",
            "load_files",
            "load_iris",
            "load_linnerud",
            "load_sample_image",
            "load_sample_images",
            "load_svmlight_file",
            "load_svmlight_files",
            "load_wine",
            "make_biclusters",
            "make_blobs",
            "make_checkerboard",
            "make_circles",
            "make_classification",
            "make_friedman1",
            "make_friedman2",
            "make_friedman3",
            "make_gaussian_quantiles",
            "make_hastie_10_2",
            "make_low_rank_matrix",
            "make_moons",
            "make_multilabel_classification",
            "make_regression",
            "make_s_curve",
            "make_sparse_coded_signal",
            "make_sparse_spd_matrix",
            "make_sparse_uncorrelated",
            "make_spd_matrix",
            "make_swiss_roll"
        ]
    },
    "decomposition": {
        "params": "não encontrado",
        "notes": "não encontrado",
        "description": "Matrix decomposition algorithms.",
        "atributes": "não encontrado",
        "metodos": [
            "DictionaryLearning",
            "FactorAnalysis",
            "FastICA",
            "IncrementalPCA",
            "KernelPCA",
            "LatentDirichletAllocation",
            "MiniBatchDictionaryLearning",
            "MiniBatchNMF",
            "MiniBatchSparsePCA",
            "NMF",
            "PCA",
            "SparseCoder",
            "SparsePCA",
            "TruncatedSVD",
            "dict_learning",
            "dict_learning_online",
            "fastica",
            "non_negative_factorization",
            "sparse_encode"
        ]
    },
    "discriminant_analysis": {
        "params": "não encontrado",
        "notes": "não encontrado",
        "description": "Linear and quadratic discriminant analysis.",
        "atributes": "não encontrado",
        "metodos": [
            "LinearDiscriminantAnalysis",
            "QuadraticDiscriminantAnalysis"
        ]
    },
    "dummy": {
        "params": "não encontrado",
        "notes": "não encontrado",
        "description": "Dummy estimators that implement simple rules of thumb.",
        "atributes": "não encontrado",
        "metodos": [
            "DummyClassifier",
            "DummyRegressor"
        ]
    },
    "ensemble": {
        "params": "não encontrado",
        "notes": "não encontrado",
        "description": "Ensemble-based methods for classification, regression and anomaly detection.",
        "atributes": "não encontrado",
        "metodos": [
            "AdaBoostClassifier",
            "AdaBoostRegressor",
            "BaggingClassifier",
            "BaggingRegressor",
            "ExtraTreesClassifier",
            "ExtraTreesRegressor",
            "GradientBoostingClassifier",
            "GradientBoostingRegressor",
            "HistGradientBoostingClassifier",
            "HistGradientBoostingRegressor",
            "IsolationForest",
            "RandomForestClassifier",
            "RandomForestRegressor",
            "RandomTreesEmbedding",
            "StackingClassifier",
            "StackingRegressor",
            "VotingClassifier",
            "VotingRegressor"
        ]
    },
    "exceptions": {
        "params": "não encontrado",
        "notes": "não encontrado",
        "description": "Custom warnings and errors used across scikit-learn.",
        "atributes": "não encontrado",
        "metodos": [
            "ConvergenceWarning",
            "DataConversionWarning",
            "DataDimensionalityWarning",
            "EfficiencyWarning",
            "FitFailedWarning",
            "InconsistentVersionWarning",
            "NotFittedError",
            "UndefinedMetricWarning",
            "EstimatorCheckFailedWarning"
        ]
    },
    "experimental": {
        "params": "não encontrado",
        "notes": "não encontrado",
        "description": "Importable modules that enable the use of experimental features or estimators.",
        "atributes": "não encontrado",
        "metodos": [
            "enable_halving_search_cv",
            "enable_iterative_imputer"
        ]
    },
    "feature_extraction": {
        "params": "não encontrado",
        "notes": "não encontrado",
        "description": "Feature extraction from raw data.",
        "atributes": "não encontrado",
        "metodos": [
            "DictVectorizer",
            "FeatureHasher",
            "image.PatchExtractor",
            "image.extract_patches_2d",
            "image.grid_to_graph",
            "image.img_to_graph",
            "image.reconstruct_from_patches_2d",
            "text.CountVectorizer",
            "text.HashingVectorizer",
            "text.TfidfTransformer",
            "text.TfidfVectorizer"
        ]
    },
    "feature_selection": {
        "params": "não encontrado",
        "notes": "não encontrado",
        "description": "Feature selection algorithms.",
        "atributes": "não encontrado",
        "metodos": [
            "GenericUnivariateSelect",
            "RFE",
            "RFECV",
            "SelectFdr",
            "SelectFpr",
            "SelectFromModel",
            "SelectFwe",
            "SelectKBest",
            "SelectPercentile",
            "SelectorMixin",
            "SequentialFeatureSelector",
            "VarianceThreshold",
            "chi2",
            "f_classif",
            "f_regression",
            "mutual_info_classif",
            "mutual_info_regression",
            "r_regression"
        ]
    },
    "frozen": {
        "params": "não encontrado",
        "notes": "não encontrado",
        "description": "FrozenEstimator",
        "atributes": "não encontrado",
        "metodos": [
            "FrozenEstimator"
        ]
    },
    "gaussian_process": {
        "params": "não encontrado",
        "notes": "não encontrado",
        "description": "Gaussian process based regression and classification.",
        "atributes": "não encontrado",
        "metodos": [
            "GaussianProcessClassifier",
            "GaussianProcessRegressor",
            "kernels.CompoundKernel",
            "kernels.ConstantKernel",
            "kernels.DotProduct",
            "kernels.ExpSineSquared",
            "kernels.Exponentiation",
            "kernels.Hyperparameter",
            "kernels.Kernel",
            "kernels.Matern",
            "kernels.PairwiseKernel",
            "kernels.Product",
            "kernels.RBF",
            "kernels.RationalQuadratic",
            "kernels.Sum",
            "kernels.WhiteKernel"
        ]
    },
    "impute": {
        "params": "não encontrado",
        "notes": "não encontrado",
        "description": "Transformers for missing value imputation.",
        "atributes": "não encontrado",
        "metodos": [
            "IterativeImputer",
            "KNNImputer",
            "MissingIndicator",
            "SimpleImputer"
        ]
    },
    "inspection": {
        "params": "não encontrado",
        "notes": "não encontrado",
        "description": "Tools for model inspection.",
        "atributes": "não encontrado",
        "metodos": [
            "partial_dependence",
            "permutation_importance",
            "[Rd9e56ef97513-BRE]",
            "DecisionBoundaryDisplay",
            "PartialDependenceDisplay"
        ]
    },
    "isotonic": {
        "params": "não encontrado",
        "notes": "não encontrado",
        "description": "Isotonic regression for obtaining monotonic fit to data.",
        "atributes": "não encontrado",
        "metodos": [
            "IsotonicRegression",
            "check_increasing",
            "isotonic_regression"
        ]
    },
    "kernel_approximation": {
        "params": "não encontrado",
        "notes": "não encontrado",
        "description": "Approximate kernel feature maps based on Fourier transforms and count sketches.",
        "atributes": "não encontrado",
        "metodos": [
            "AdditiveChi2Sampler",
            "Nystroem",
            "PolynomialCountSketch",
            "RBFSampler",
            "SkewedChi2Sampler"
        ]
    },
    "kernel_ridge": {
        "params": "não encontrado",
        "notes": "não encontrado",
        "description": "Kernel ridge regression.",
        "atributes": "não encontrado",
        "metodos": [
            "KernelRidge"
        ]
    },
    "linear_model": {
        "params": "não encontrado",
        "notes": "não encontrado",
        "description": "A variety of linear models.",
        "atributes": "não encontrado",
        "metodos": [
            "LogisticRegression",
            "LogisticRegressionCV",
            "PassiveAggressiveClassifier",
            "Perceptron",
            "RidgeClassifier",
            "RidgeClassifierCV",
            "SGDClassifier",
            "SGDOneClassSVM",
            "LinearRegression",
            "Ridge",
            "RidgeCV",
            "SGDRegressor",
            "ElasticNet",
            "ElasticNetCV",
            "Lars",
            "LarsCV",
            "Lasso",
            "LassoCV",
            "LassoLars",
            "LassoLarsCV",
            "LassoLarsIC",
            "OrthogonalMatchingPursuit",
            "OrthogonalMatchingPursuitCV",
            "ARDRegression",
            "BayesianRidge",
            "MultiTaskElasticNet",
            "MultiTaskElasticNetCV",
            "MultiTaskLasso",
            "MultiTaskLassoCV",
            "HuberRegressor",
            "QuantileRegressor",
            "RANSACRegressor",
            "TheilSenRegressor",
            "GammaRegressor",
            "PoissonRegressor",
            "TweedieRegressor",
            "PassiveAggressiveRegressor",
            "enet_path",
            "lars_path",
            "lars_path_gram",
            "lasso_path",
            "orthogonal_mp",
            "orthogonal_mp_gram",
            "ridge_regression"
        ]
    },
    "manifold": {
        "params": "não encontrado",
        "notes": "não encontrado",
        "description": "Data embedding techniques.",
        "atributes": "não encontrado",
        "metodos": [
            "Isomap",
            "LocallyLinearEmbedding",
            "MDS",
            "SpectralEmbedding",
            "TSNE",
            "locally_linear_embedding",
            "smacof",
            "spectral_embedding",
            "trustworthiness"
        ]
    },
    "metrics": {
        "params": "não encontrado",
        "notes": "não encontrado",
        "description": "Score functions, performance metrics, pairwise metrics and distance computations.",
        "atributes": "não encontrado",
        "metodos": [
            "check_scoring",
            "get_scorer",
            "get_scorer_names",
            "make_scorer",
            "accuracy_score",
            "auc",
            "average_precision_score",
            "balanced_accuracy_score",
            "brier_score_loss",
            "class_likelihood_ratios",
            "classification_report",
            "cohen_kappa_score",
            "confusion_matrix",
            "d2_log_loss_score",
            "dcg_score",
            "det_curve",
            "f1_score",
            "fbeta_score",
            "hamming_loss",
            "hinge_loss",
            "jaccard_score",
            "log_loss",
            "matthews_corrcoef",
            "multilabel_confusion_matrix",
            "ndcg_score",
            "precision_recall_curve",
            "precision_recall_fscore_support",
            "precision_score",
            "recall_score",
            "roc_auc_score",
            "roc_curve",
            "top_k_accuracy_score",
            "zero_one_loss",
            "d2_absolute_error_score",
            "d2_pinball_score",
            "d2_tweedie_score",
            "explained_variance_score",
            "max_error",
            "mean_absolute_error",
            "mean_absolute_percentage_error",
            "mean_gamma_deviance",
            "mean_pinball_loss",
            "mean_poisson_deviance",
            "mean_squared_error",
            "mean_squared_log_error",
            "mean_tweedie_deviance",
            "median_absolute_error",
            "r2_score",
            "root_mean_squared_error",
            "root_mean_squared_log_error",
            "coverage_error",
            "label_ranking_average_precision_score",
            "label_ranking_loss",
            "adjusted_mutual_info_score",
            "adjusted_rand_score",
            "calinski_harabasz_score",
            "cluster.contingency_matrix",
            "cluster.pair_confusion_matrix",
            "completeness_score",
            "davies_bouldin_score",
            "fowlkes_mallows_score",
            "homogeneity_completeness_v_measure",
            "homogeneity_score",
            "mutual_info_score",
            "normalized_mutual_info_score",
            "rand_score",
            "silhouette_samples",
            "silhouette_score",
            "v_measure_score",
            "consensus_score",
            "DistanceMetric",
            "pairwise.additive_chi2_kernel",
            "pairwise.chi2_kernel",
            "pairwise.cosine_distances",
            "pairwise.cosine_similarity",
            "pairwise.distance_metrics",
            "pairwise.euclidean_distances",
            "pairwise.haversine_distances",
            "pairwise.kernel_metrics",
            "pairwise.laplacian_kernel",
            "pairwise.linear_kernel",
            "pairwise.manhattan_distances",
            "pairwise.nan_euclidean_distances",
            "pairwise.paired_cosine_distances",
            "pairwise.paired_distances",
            "pairwise.paired_euclidean_distances",
            "pairwise.paired_manhattan_distances",
            "pairwise.pairwise_kernels",
            "pairwise.polynomial_kernel",
            "pairwise.rbf_kernel",
            "pairwise.sigmoid_kernel",
            "pairwise_distances",
            "pairwise_distances_argmin",
            "pairwise_distances_argmin_min",
            "pairwise_distances_chunked",
            "ConfusionMatrixDisplay",
            "DetCurveDisplay",
            "PrecisionRecallDisplay",
            "PredictionErrorDisplay",
            "RocCurveDisplay"
        ]
    },
    "mixture": {
        "params": "não encontrado",
        "notes": "não encontrado",
        "description": "Mixture modeling algorithms.",
        "atributes": "não encontrado",
        "metodos": [
            "BayesianGaussianMixture",
            "GaussianMixture"
        ]
    },
    "model_selection": {
        "params": "não encontrado",
        "notes": "não encontrado",
        "description": "Tools for model selection, such as cross validation and hyper-parameter tuning.",
        "atributes": "não encontrado",
        "metodos": [
            "GroupKFold",
            "GroupShuffleSplit",
            "KFold",
            "LeaveOneGroupOut",
            "LeaveOneOut",
            "LeavePGroupsOut",
            "LeavePOut",
            "PredefinedSplit",
            "RepeatedKFold",
            "RepeatedStratifiedKFold",
            "ShuffleSplit",
            "StratifiedGroupKFold",
            "StratifiedKFold",
            "StratifiedShuffleSplit",
            "TimeSeriesSplit",
            "check_cv",
            "train_test_split",
            "GridSearchCV",
            "HalvingGridSearchCV",
            "HalvingRandomSearchCV",
            "ParameterGrid",
            "ParameterSampler",
            "RandomizedSearchCV",
            "FixedThresholdClassifier",
            "TunedThresholdClassifierCV",
            "cross_val_predict",
            "cross_val_score",
            "cross_validate",
            "learning_curve",
            "permutation_test_score",
            "validation_curve",
            "LearningCurveDisplay",
            "ValidationCurveDisplay"
        ]
    },
    "multiclass": {
        "params": "não encontrado",
        "notes": "não encontrado",
        "description": "Multiclass learning algorithms.",
        "atributes": "não encontrado",
        "metodos": [
            "OneVsOneClassifier",
            "OneVsRestClassifier",
            "OutputCodeClassifier"
        ]
    },
    "multioutput": {
        "params": "não encontrado",
        "notes": "não encontrado",
        "description": "Multioutput regression and classification.",
        "atributes": "não encontrado",
        "metodos": [
            "ClassifierChain",
            "MultiOutputClassifier",
            "MultiOutputRegressor",
            "RegressorChain"
        ]
    },
    "naive_bayes": {
        "params": "não encontrado",
        "notes": "não encontrado",
        "description": "Naive Bayes algorithms.",
        "atributes": "não encontrado",
        "metodos": [
            "BernoulliNB",
            "CategoricalNB",
            "ComplementNB",
            "GaussianNB",
            "MultinomialNB"
        ]
    },
    "neighbors": {
        "params": "não encontrado",
        "notes": "não encontrado",
        "description": "The k-nearest neighbors algorithms.",
        "atributes": "não encontrado",
        "metodos": [
            "BallTree",
            "KDTree",
            "KNeighborsClassifier",
            "KNeighborsRegressor",
            "KNeighborsTransformer",
            "KernelDensity",
            "LocalOutlierFactor",
            "NearestCentroid",
            "NearestNeighbors",
            "NeighborhoodComponentsAnalysis",
            "RadiusNeighborsClassifier",
            "RadiusNeighborsRegressor",
            "RadiusNeighborsTransformer",
            "kneighbors_graph",
            "radius_neighbors_graph",
            "sort_graph_by_row_values"
        ]
    },
    "neural_network": {
        "params": "não encontrado",
        "notes": "não encontrado",
        "description": "Models based on neural networks.",
        "atributes": "não encontrado",
        "metodos": [
            "BernoulliRBM",
            "MLPClassifier",
            "MLPRegressor"
        ]
    },
    "pipeline": {
        "params": "não encontrado",
        "notes": "não encontrado",
        "description": "Utilities to build a composite estimator as a chain of transforms and estimators.",
        "atributes": "não encontrado",
        "metodos": [
            "FeatureUnion",
            "Pipeline",
            "make_pipeline",
            "Pipeline",
            "make_union",
            "FeatureUnion"
        ]
    },
    "preprocessing": {
        "params": "não encontrado",
        "notes": "não encontrado",
        "description": "Methods for scaling, centering, normalization, binarization, and more.",
        "atributes": "não encontrado",
        "metodos": [
            "Binarizer",
            "FunctionTransformer",
            "KBinsDiscretizer",
            "KernelCenterer",
            "LabelBinarizer",
            "LabelEncoder",
            "MaxAbsScaler",
            "MinMaxScaler",
            "MultiLabelBinarizer",
            "Normalizer",
            "OneHotEncoder",
            "OrdinalEncoder",
            "PolynomialFeatures",
            "PowerTransformer",
            "QuantileTransformer",
            "RobustScaler",
            "SplineTransformer",
            "StandardScaler",
            "TargetEncoder",
            "add_dummy_feature",
            "binarize",
            "label_binarize",
            "maxabs_scale",
            "minmax_scale",
            "normalize",
            "power_transform",
            "quantile_transform",
            "robust_scale",
            "scale"
        ]
    },
    "random_projection": {
        "params": "não encontrado",
        "notes": "não encontrado",
        "description": "Random projection transformers.",
        "atributes": "não encontrado",
        "metodos": [
            "GaussianRandomProjection",
            "SparseRandomProjection",
            "johnson_lindenstrauss_min_dim"
        ]
    },
    "semi_supervised": {
        "params": "não encontrado",
        "notes": "não encontrado",
        "description": "Semi-supervised learning algorithms.",
        "atributes": "não encontrado",
        "metodos": [
            "LabelPropagation",
            "LabelSpreading",
            "SelfTrainingClassifier"
        ]
    },
    "svm": {
        "params": "não encontrado",
        "notes": "não encontrado",
        "description": "Support vector machine algorithms.",
        "atributes": "não encontrado",
        "metodos": [
            "LinearSVC",
            "LinearSVR",
            "NuSVC",
            "NuSVR",
            "OneClassSVM",
            "SVC",
            "SVR",
            "l1_min_c"
        ]
    },
    "tree": {
        "params": "não encontrado",
        "notes": "não encontrado",
        "description": "Decision tree based models for classification and regression.",
        "atributes": "não encontrado",
        "metodos": [
            "DecisionTreeClassifier",
            "DecisionTreeRegressor",
            "ExtraTreeClassifier",
            "ExtraTreeRegressor",
            "export_graphviz",
            "export_text",
            "plot_tree"
        ]
    },
    "utils": {
        "params": "não encontrado",
        "notes": "não encontrado",
        "description": "Various utilities to help with development.",
        "atributes": "não encontrado",
        "metodos": [
            "Bunch",
            "_safe_indexing",
            "as_float_array",
            "assert_all_finite",
            "deprecated",
            "estimator_html_repr",
            "gen_batches",
            "gen_even_slices",
            "indexable",
            "murmurhash3_32",
            "resample",
            "safe_mask",
            "safe_sqr",
            "shuffle",
            "Tags",
            "InputTags",
            "TargetTags",
            "ClassifierTags",
            "RegressorTags",
            "TransformerTags",
            "get_tags",
            "check_X_y",
            "check_array",
            "check_consistent_length",
            "check_random_state",
            "check_scalar",
            "validation.check_is_fitted",
            "validation.check_memory",
            "validation.check_symmetric",
            "validation.column_or_1d",
            "validation.has_fit_parameter",
            "validation.validate_data",
            "metaestimators.available_if",
            "class_weight.compute_class_weight",
            "class_weight.compute_sample_weight",
            "multiclass.is_multilabel",
            "multiclass.type_of_target",
            "multiclass.unique_labels",
            "extmath.density",
            "extmath.fast_logdet",
            "extmath.randomized_range_finder",
            "extmath.randomized_svd",
            "extmath.safe_sparse_dot",
            "extmath.weighted_mode",
            "sparsefuncs.incr_mean_variance_axis",
            "sparsefuncs.inplace_column_scale",
            "sparsefuncs.inplace_csr_column_scale",
            "sparsefuncs.inplace_row_scale",
            "sparsefuncs.inplace_swap_column",
            "sparsefuncs.inplace_swap_row",
            "sparsefuncs.mean_variance_axis",
            "sparsefuncs_fast.inplace_csr_row_normalize_l1",
            "sparsefuncs_fast.inplace_csr_row_normalize_l2",
            "graph.single_source_shortest_path_length",
            "random.sample_without_replacement",
            "arrayfuncs.min_pos",
            "metadata_routing.MetadataRequest",
            "metadata_routing.MetadataRouter",
            "metadata_routing.MethodMapping",
            "metadata_routing.get_routing_for_object",
            "metadata_routing.process_routing",
            "discovery.all_displays",
            "discovery.all_estimators",
            "discovery.all_functions",
            "estimator_checks.check_estimator",
            "estimator_checks.parametrize_with_checks",
            "estimator_checks.estimator_checks_generator",
            "parallel.Parallel",
            "parallel.delayed"
        ]
    },
    "deprecated": {
        "params": "não encontrado",
        "notes": "não encontrado",
        "description": "To be removed in 1.7",
        "atributes": "não encontrado",
        "metodos": [
            "utils.parallel_backend",
            "utils.register_parallel_backend"
        ]
    }
}
