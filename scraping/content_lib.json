{
    "add_docstring": {
        "description": "Add a docstring to a built-in obj if possible.\nIf the obj already has a docstring raise a RuntimeError\nIf this routine does not know how to add a docstring to the object\nraise a TypeError",
        "params": [],
        "return": "",
        "notes": "",
        "examples": ""
    },
    "add_newdoc": {
        "description": "Add documentation to an existing object, typically one defined in C",
        "params": [
            {
                "placestr": "The absolute name of the module to import from"
            },
            {
                "objstr or None": "The name of the object to add documentation to, typically a class or\nfunction name."
            },
            {
                "doc{str, Tuple[str, str], List[Tuple[str, str]]}": "If a string, the documentation to apply toobjIf a tuple, then the first element is interpreted as an attribute\nofobjand the second as the docstring to apply -(method,docstring)If a list, then each element of the list should be a tuple of length\ntwo -[(method1,docstring1),(method2,docstring2),...]"
            },
            {
                "warn_on_pythonbool": "If True, the default, emitUserWarningif this is used to attach\ndocumentation to a pure-python object."
            }
        ],
        "return": "",
        "notes": "",
        "examples": ""
    },
    "Arrayterator": {
        "description": "Buffered iterator for big arrays.",
        "params": [
            {
                "vararray_like": "The object to iterate over."
            },
            {
                "buf_sizeint, optional": "The buffer size. Ifbuf_sizeis supplied, the maximum amount of\ndata that will be read into memory isbuf_sizeelements.\nDefault is None, which will read as many element as possible\ninto memory."
            }
        ],
        "return": "",
        "notes": "",
        "examples": ""
    },
    "NumpyVersion": {
        "description": "Parse and compare numpy version strings.",
        "params": [
            {
                "vstringstr": "NumPy version string (np.__version__)."
            }
        ],
        "return": "",
        "notes": "",
        "examples": ""
    },
    "array_utils": null,
    "format": null,
    "introspect": null,
    "mixins": null,
    "npyio": null,
    "scimath": null,
    "stride_tricks": null
}